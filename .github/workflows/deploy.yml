# 워크 플로우 이름
name: Java CI with Gradle

# 워크 플로우가 언제 실행 될지를 정한다.
on:
  push:
    branches: [ "feature/GOORM-6-github-actions" ]
  pull_request:
    branches: [ "feature/GOORM-6-github-actions" ]

# 워크플로우에서 할 작업 정의한다.
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.6.0
        with:
          arguments: build -x test

      - name: Deploy to EC2
        run: |
          echo "${{ secrets.EC2_PEM_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          echo "Private key file created and permissions set."

          # JAR 파일 업로드
          echo "Uploading JAR file to EC2 instance..."
          scp -i private_key.pem -o StrictHostKeyChecking=no ${{ github.workspace }}/build/libs/team49-0.0.1-SNAPSHOT.jar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}
          echo "JAR file uploaded to EC2."

          # SSH 연결 및 애플리케이션 실행
          echo "Starting SSH session on EC2..."
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            set -x
            echo "Setting environment variables on EC2..."
            export DB_NAME=${{ secrets.DB_NAME }}
            export DB_USERNAME=${{ secrets.DB_USERNAME }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            export REST_API_KEY=${{ secrets.REST_API_KEY }}
            echo "Environment variables set."

            echo "Stopping existing Java processes (if any)..."
            pgrep java | xargs kill -9 || true
            echo "Existing Java processes stopped."

            echo "Starting application..."
            nohup java -jar team49-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
            echo "Application started."
          EOF
          echo "Checking application logs..."
          sleep 5
          tail -n 20 app.log
    # 로컬 SSH 키 삭제
          echo "Cleaning up private key..."
          rm -f private_key.pem
          echo "Private key deleted."

